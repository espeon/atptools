/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AtHandleIndexImport } from './routes/at:/$handle.index'
import { Route as ConstellationLinksCollectionImport } from './routes/constellation/links.$collection'
import { Route as ConstellationDidsCollectionImport } from './routes/constellation/dids.$collection'

// Create Virtual Routes

const PostLazyImport = createFileRoute('/post')()
const JetstreamLazyImport = createFileRoute('/jetstream')()
const CounterLazyImport = createFileRoute('/counter')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const RnfgrerttIndexLazyImport = createFileRoute('/rnfgrertt/')()
const RnfgrerttTypingLazyImport = createFileRoute('/rnfgrertt/typing')()
const RnfgrerttPdslsLazyImport = createFileRoute('/rnfgrertt/pdsls')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()
const AuthCallbackLazyImport = createFileRoute('/auth/callback')()
const PdsUrlIndexLazyImport = createFileRoute('/pds/$url/')()
const AtHandleCollectionIndexLazyImport = createFileRoute(
  '/at:/$handle/$collection/',
)()
const AtHandleCollectionRkeyLazyImport = createFileRoute(
  '/at:/$handle/$collection/$rkey',
)()

// Create/Update Routes

const PostLazyRoute = PostLazyImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/post.lazy').then((d) => d.Route))

const JetstreamLazyRoute = JetstreamLazyImport.update({
  id: '/jetstream',
  path: '/jetstream',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/jetstream.lazy').then((d) => d.Route))

const CounterLazyRoute = CounterLazyImport.update({
  id: '/counter',
  path: '/counter',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/counter.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const RnfgrerttIndexLazyRoute = RnfgrerttIndexLazyImport.update({
  id: '/rnfgrertt/',
  path: '/rnfgrertt/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/rnfgrertt/index.lazy').then((d) => d.Route),
)

const RnfgrerttTypingLazyRoute = RnfgrerttTypingLazyImport.update({
  id: '/rnfgrertt/typing',
  path: '/rnfgrertt/typing',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/rnfgrertt/typing.lazy').then((d) => d.Route),
)

const RnfgrerttPdslsLazyRoute = RnfgrerttPdslsLazyImport.update({
  id: '/rnfgrertt/pdsls',
  path: '/rnfgrertt/pdsls',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/rnfgrertt/pdsls.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

const AuthCallbackLazyRoute = AuthCallbackLazyImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/callback.lazy').then((d) => d.Route))

const PdsUrlIndexLazyRoute = PdsUrlIndexLazyImport.update({
  id: '/pds/$url/',
  path: '/pds/$url/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/pds/$url.index.lazy').then((d) => d.Route),
)

const AtHandleIndexRoute = AtHandleIndexImport.update({
  id: '/at:/$handle/',
  path: '/at:/$handle/',
  getParentRoute: () => rootRoute,
} as any)

const ConstellationLinksCollectionRoute =
  ConstellationLinksCollectionImport.update({
    id: '/constellation/links/$collection',
    path: '/constellation/links/$collection',
    getParentRoute: () => rootRoute,
  } as any)

const ConstellationDidsCollectionRoute =
  ConstellationDidsCollectionImport.update({
    id: '/constellation/dids/$collection',
    path: '/constellation/dids/$collection',
    getParentRoute: () => rootRoute,
  } as any)

const AtHandleCollectionIndexLazyRoute =
  AtHandleCollectionIndexLazyImport.update({
    id: '/at:/$handle/$collection/',
    path: '/at:/$handle/$collection/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/at:/$handle/$collection.index.lazy').then((d) => d.Route),
  )

const AtHandleCollectionRkeyLazyRoute = AtHandleCollectionRkeyLazyImport.update(
  {
    id: '/at:/$handle/$collection/$rkey',
    path: '/at:/$handle/$collection/$rkey',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/at:/$handle/$collection.$rkey.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/counter': {
      id: '/counter'
      path: '/counter'
      fullPath: '/counter'
      preLoaderRoute: typeof CounterLazyImport
      parentRoute: typeof rootRoute
    }
    '/jetstream': {
      id: '/jetstream'
      path: '/jetstream'
      fullPath: '/jetstream'
      preLoaderRoute: typeof JetstreamLazyImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/rnfgrertt/pdsls': {
      id: '/rnfgrertt/pdsls'
      path: '/rnfgrertt/pdsls'
      fullPath: '/rnfgrertt/pdsls'
      preLoaderRoute: typeof RnfgrerttPdslsLazyImport
      parentRoute: typeof rootRoute
    }
    '/rnfgrertt/typing': {
      id: '/rnfgrertt/typing'
      path: '/rnfgrertt/typing'
      fullPath: '/rnfgrertt/typing'
      preLoaderRoute: typeof RnfgrerttTypingLazyImport
      parentRoute: typeof rootRoute
    }
    '/rnfgrertt/': {
      id: '/rnfgrertt/'
      path: '/rnfgrertt'
      fullPath: '/rnfgrertt'
      preLoaderRoute: typeof RnfgrerttIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/constellation/dids/$collection': {
      id: '/constellation/dids/$collection'
      path: '/constellation/dids/$collection'
      fullPath: '/constellation/dids/$collection'
      preLoaderRoute: typeof ConstellationDidsCollectionImport
      parentRoute: typeof rootRoute
    }
    '/constellation/links/$collection': {
      id: '/constellation/links/$collection'
      path: '/constellation/links/$collection'
      fullPath: '/constellation/links/$collection'
      preLoaderRoute: typeof ConstellationLinksCollectionImport
      parentRoute: typeof rootRoute
    }
    '/at:/$handle/': {
      id: '/at:/$handle/'
      path: '/at:/$handle'
      fullPath: '/at:/$handle'
      preLoaderRoute: typeof AtHandleIndexImport
      parentRoute: typeof rootRoute
    }
    '/pds/$url/': {
      id: '/pds/$url/'
      path: '/pds/$url'
      fullPath: '/pds/$url'
      preLoaderRoute: typeof PdsUrlIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/at:/$handle/$collection/$rkey': {
      id: '/at:/$handle/$collection/$rkey'
      path: '/at:/$handle/$collection/$rkey'
      fullPath: '/at:/$handle/$collection/$rkey'
      preLoaderRoute: typeof AtHandleCollectionRkeyLazyImport
      parentRoute: typeof rootRoute
    }
    '/at:/$handle/$collection/': {
      id: '/at:/$handle/$collection/'
      path: '/at:/$handle/$collection'
      fullPath: '/at:/$handle/$collection'
      preLoaderRoute: typeof AtHandleCollectionIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/counter': typeof CounterLazyRoute
  '/jetstream': typeof JetstreamLazyRoute
  '/post': typeof PostLazyRoute
  '/auth/callback': typeof AuthCallbackLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/rnfgrertt/pdsls': typeof RnfgrerttPdslsLazyRoute
  '/rnfgrertt/typing': typeof RnfgrerttTypingLazyRoute
  '/rnfgrertt': typeof RnfgrerttIndexLazyRoute
  '/constellation/dids/$collection': typeof ConstellationDidsCollectionRoute
  '/constellation/links/$collection': typeof ConstellationLinksCollectionRoute
  '/at:/$handle': typeof AtHandleIndexRoute
  '/pds/$url': typeof PdsUrlIndexLazyRoute
  '/at:/$handle/$collection/$rkey': typeof AtHandleCollectionRkeyLazyRoute
  '/at:/$handle/$collection': typeof AtHandleCollectionIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/counter': typeof CounterLazyRoute
  '/jetstream': typeof JetstreamLazyRoute
  '/post': typeof PostLazyRoute
  '/auth/callback': typeof AuthCallbackLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/rnfgrertt/pdsls': typeof RnfgrerttPdslsLazyRoute
  '/rnfgrertt/typing': typeof RnfgrerttTypingLazyRoute
  '/rnfgrertt': typeof RnfgrerttIndexLazyRoute
  '/constellation/dids/$collection': typeof ConstellationDidsCollectionRoute
  '/constellation/links/$collection': typeof ConstellationLinksCollectionRoute
  '/at:/$handle': typeof AtHandleIndexRoute
  '/pds/$url': typeof PdsUrlIndexLazyRoute
  '/at:/$handle/$collection/$rkey': typeof AtHandleCollectionRkeyLazyRoute
  '/at:/$handle/$collection': typeof AtHandleCollectionIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/counter': typeof CounterLazyRoute
  '/jetstream': typeof JetstreamLazyRoute
  '/post': typeof PostLazyRoute
  '/auth/callback': typeof AuthCallbackLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/rnfgrertt/pdsls': typeof RnfgrerttPdslsLazyRoute
  '/rnfgrertt/typing': typeof RnfgrerttTypingLazyRoute
  '/rnfgrertt/': typeof RnfgrerttIndexLazyRoute
  '/constellation/dids/$collection': typeof ConstellationDidsCollectionRoute
  '/constellation/links/$collection': typeof ConstellationLinksCollectionRoute
  '/at:/$handle/': typeof AtHandleIndexRoute
  '/pds/$url/': typeof PdsUrlIndexLazyRoute
  '/at:/$handle/$collection/$rkey': typeof AtHandleCollectionRkeyLazyRoute
  '/at:/$handle/$collection/': typeof AtHandleCollectionIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/counter'
    | '/jetstream'
    | '/post'
    | '/auth/callback'
    | '/auth/login'
    | '/rnfgrertt/pdsls'
    | '/rnfgrertt/typing'
    | '/rnfgrertt'
    | '/constellation/dids/$collection'
    | '/constellation/links/$collection'
    | '/at:/$handle'
    | '/pds/$url'
    | '/at:/$handle/$collection/$rkey'
    | '/at:/$handle/$collection'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/counter'
    | '/jetstream'
    | '/post'
    | '/auth/callback'
    | '/auth/login'
    | '/rnfgrertt/pdsls'
    | '/rnfgrertt/typing'
    | '/rnfgrertt'
    | '/constellation/dids/$collection'
    | '/constellation/links/$collection'
    | '/at:/$handle'
    | '/pds/$url'
    | '/at:/$handle/$collection/$rkey'
    | '/at:/$handle/$collection'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/counter'
    | '/jetstream'
    | '/post'
    | '/auth/callback'
    | '/auth/login'
    | '/rnfgrertt/pdsls'
    | '/rnfgrertt/typing'
    | '/rnfgrertt/'
    | '/constellation/dids/$collection'
    | '/constellation/links/$collection'
    | '/at:/$handle/'
    | '/pds/$url/'
    | '/at:/$handle/$collection/$rkey'
    | '/at:/$handle/$collection/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  CounterLazyRoute: typeof CounterLazyRoute
  JetstreamLazyRoute: typeof JetstreamLazyRoute
  PostLazyRoute: typeof PostLazyRoute
  AuthCallbackLazyRoute: typeof AuthCallbackLazyRoute
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  RnfgrerttPdslsLazyRoute: typeof RnfgrerttPdslsLazyRoute
  RnfgrerttTypingLazyRoute: typeof RnfgrerttTypingLazyRoute
  RnfgrerttIndexLazyRoute: typeof RnfgrerttIndexLazyRoute
  ConstellationDidsCollectionRoute: typeof ConstellationDidsCollectionRoute
  ConstellationLinksCollectionRoute: typeof ConstellationLinksCollectionRoute
  AtHandleIndexRoute: typeof AtHandleIndexRoute
  PdsUrlIndexLazyRoute: typeof PdsUrlIndexLazyRoute
  AtHandleCollectionRkeyLazyRoute: typeof AtHandleCollectionRkeyLazyRoute
  AtHandleCollectionIndexLazyRoute: typeof AtHandleCollectionIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  CounterLazyRoute: CounterLazyRoute,
  JetstreamLazyRoute: JetstreamLazyRoute,
  PostLazyRoute: PostLazyRoute,
  AuthCallbackLazyRoute: AuthCallbackLazyRoute,
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  RnfgrerttPdslsLazyRoute: RnfgrerttPdslsLazyRoute,
  RnfgrerttTypingLazyRoute: RnfgrerttTypingLazyRoute,
  RnfgrerttIndexLazyRoute: RnfgrerttIndexLazyRoute,
  ConstellationDidsCollectionRoute: ConstellationDidsCollectionRoute,
  ConstellationLinksCollectionRoute: ConstellationLinksCollectionRoute,
  AtHandleIndexRoute: AtHandleIndexRoute,
  PdsUrlIndexLazyRoute: PdsUrlIndexLazyRoute,
  AtHandleCollectionRkeyLazyRoute: AtHandleCollectionRkeyLazyRoute,
  AtHandleCollectionIndexLazyRoute: AtHandleCollectionIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/counter",
        "/jetstream",
        "/post",
        "/auth/callback",
        "/auth/login",
        "/rnfgrertt/pdsls",
        "/rnfgrertt/typing",
        "/rnfgrertt/",
        "/constellation/dids/$collection",
        "/constellation/links/$collection",
        "/at:/$handle/",
        "/pds/$url/",
        "/at:/$handle/$collection/$rkey",
        "/at:/$handle/$collection/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/counter": {
      "filePath": "counter.lazy.tsx"
    },
    "/jetstream": {
      "filePath": "jetstream.lazy.tsx"
    },
    "/post": {
      "filePath": "post.lazy.tsx"
    },
    "/auth/callback": {
      "filePath": "auth/callback.lazy.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.tsx"
    },
    "/rnfgrertt/pdsls": {
      "filePath": "rnfgrertt/pdsls.lazy.tsx"
    },
    "/rnfgrertt/typing": {
      "filePath": "rnfgrertt/typing.lazy.tsx"
    },
    "/rnfgrertt/": {
      "filePath": "rnfgrertt/index.lazy.tsx"
    },
    "/constellation/dids/$collection": {
      "filePath": "constellation/dids.$collection.tsx"
    },
    "/constellation/links/$collection": {
      "filePath": "constellation/links.$collection.tsx"
    },
    "/at:/$handle/": {
      "filePath": "at:/$handle.index.tsx"
    },
    "/pds/$url/": {
      "filePath": "pds/$url.index.lazy.tsx"
    },
    "/at:/$handle/$collection/$rkey": {
      "filePath": "at:/$handle/$collection.$rkey.lazy.tsx"
    },
    "/at:/$handle/$collection/": {
      "filePath": "at:/$handle/$collection.index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
