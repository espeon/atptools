/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const AtHandleLazyImport = createFileRoute('/at/$handle')()
const AtHandleCollectionLazyImport = createFileRoute(
  '/at/$handle/$collection',
)()
const AtHandleCollectionRkeyLazyImport = createFileRoute(
  '/at/$handle/$collection/$rkey',
)()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AtHandleLazyRoute = AtHandleLazyImport.update({
  id: '/at/$handle',
  path: '/at/$handle',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/at/$handle.lazy').then((d) => d.Route))

const AtHandleCollectionLazyRoute = AtHandleCollectionLazyImport.update({
  id: '/$collection',
  path: '/$collection',
  getParentRoute: () => AtHandleLazyRoute,
} as any).lazy(() =>
  import('./routes/at/$handle.$collection.lazy').then((d) => d.Route),
)

const AtHandleCollectionRkeyLazyRoute = AtHandleCollectionRkeyLazyImport.update(
  {
    id: '/$rkey',
    path: '/$rkey',
    getParentRoute: () => AtHandleCollectionLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/at/$handle.$collection.$rkey.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/at/$handle': {
      id: '/at/$handle'
      path: '/at/$handle'
      fullPath: '/at/$handle'
      preLoaderRoute: typeof AtHandleLazyImport
      parentRoute: typeof rootRoute
    }
    '/at/$handle/$collection': {
      id: '/at/$handle/$collection'
      path: '/$collection'
      fullPath: '/at/$handle/$collection'
      preLoaderRoute: typeof AtHandleCollectionLazyImport
      parentRoute: typeof AtHandleLazyImport
    }
    '/at/$handle/$collection/$rkey': {
      id: '/at/$handle/$collection/$rkey'
      path: '/$rkey'
      fullPath: '/at/$handle/$collection/$rkey'
      preLoaderRoute: typeof AtHandleCollectionRkeyLazyImport
      parentRoute: typeof AtHandleCollectionLazyImport
    }
  }
}

// Create and export the route tree

interface AtHandleCollectionLazyRouteChildren {
  AtHandleCollectionRkeyLazyRoute: typeof AtHandleCollectionRkeyLazyRoute
}

const AtHandleCollectionLazyRouteChildren: AtHandleCollectionLazyRouteChildren =
  {
    AtHandleCollectionRkeyLazyRoute: AtHandleCollectionRkeyLazyRoute,
  }

const AtHandleCollectionLazyRouteWithChildren =
  AtHandleCollectionLazyRoute._addFileChildren(
    AtHandleCollectionLazyRouteChildren,
  )

interface AtHandleLazyRouteChildren {
  AtHandleCollectionLazyRoute: typeof AtHandleCollectionLazyRouteWithChildren
}

const AtHandleLazyRouteChildren: AtHandleLazyRouteChildren = {
  AtHandleCollectionLazyRoute: AtHandleCollectionLazyRouteWithChildren,
}

const AtHandleLazyRouteWithChildren = AtHandleLazyRoute._addFileChildren(
  AtHandleLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/at/$handle': typeof AtHandleLazyRouteWithChildren
  '/at/$handle/$collection': typeof AtHandleCollectionLazyRouteWithChildren
  '/at/$handle/$collection/$rkey': typeof AtHandleCollectionRkeyLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/at/$handle': typeof AtHandleLazyRouteWithChildren
  '/at/$handle/$collection': typeof AtHandleCollectionLazyRouteWithChildren
  '/at/$handle/$collection/$rkey': typeof AtHandleCollectionRkeyLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/at/$handle': typeof AtHandleLazyRouteWithChildren
  '/at/$handle/$collection': typeof AtHandleCollectionLazyRouteWithChildren
  '/at/$handle/$collection/$rkey': typeof AtHandleCollectionRkeyLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/at/$handle'
    | '/at/$handle/$collection'
    | '/at/$handle/$collection/$rkey'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/at/$handle'
    | '/at/$handle/$collection'
    | '/at/$handle/$collection/$rkey'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/at/$handle'
    | '/at/$handle/$collection'
    | '/at/$handle/$collection/$rkey'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AtHandleLazyRoute: typeof AtHandleLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  AtHandleLazyRoute: AtHandleLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/at/$handle"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/at/$handle": {
      "filePath": "at/$handle.lazy.tsx",
      "children": [
        "/at/$handle/$collection"
      ]
    },
    "/at/$handle/$collection": {
      "filePath": "at/$handle.$collection.lazy.tsx",
      "parent": "/at/$handle",
      "children": [
        "/at/$handle/$collection/$rkey"
      ]
    },
    "/at/$handle/$collection/$rkey": {
      "filePath": "at/$handle.$collection.$rkey.lazy.tsx",
      "parent": "/at/$handle/$collection"
    }
  }
}
ROUTE_MANIFEST_END */
